/*
* @Author: sphao
* @Date:   2018-08-30 21:40:46
* @Last Modified by:   sphao
* @Last Modified time: 2018-08-30 22:05:05
*/

/*
1008 数组元素循环右移问题（20 分）
一个数组A中存有N（>0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（≥0）个位置，（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？

输入格式:
每个输入包含一个测试用例，第1行输入N（1≤N≤100）和M（≥0）；第2行输入N个整数，之间用空格分隔。

输出格式:
在一行中输出循环右移M位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。

输入样例:
6 2
1 2 3 4 5 6
输出样例:
5 6 1 2 3 4
 */

/*
思路：在输入时直接进行错位存储，需要考虑M>N时的情况，直接令M = M % N即可。
 */

#include <cstdio>

int main(int argc, char const *argv[])
{
	int n = 0, m = 0;
	scanf("%d", &n);
	scanf("%d", &m);
	int a[100] = {0};
	m = m % n;				//将大于N的M转换
	for(int i = 0; i < n; i++)
	{
		int t = 0;
		(i+m)>n-1 ? scanf("%d", &a[i + m - n]) : scanf("%d", &a[i + m]);	//错位存储
	}

	for(int i = 0; i < n; i ++)
	{
		printf("%d%c", a[i], n -i -1 ? ' ' : '\0');		//空格
	}
	return 0;
}